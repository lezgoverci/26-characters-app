'use client'
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/ZRK76lmlplq
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Judson } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

judson({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { useState } from 'react'
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import Link from "next/link"
import axios from "axios"
import { useRouter } from 'next/navigation'

export default function Signup() {
  const router = useRouter()

  const [formData, setFormData] = useState({

     email: '',
     password: '',
     confirmPassword: ''

    });

  const handleSubmit = (e: any) =>{
    e.preventDefault();
  console.log(formData);
  axios.post('https://n8n.xponent.ph/webhook/api/auth/signup', formData)
  .then(response => {
    console.log(response.data);
    alert("Success")
    router.push('/templates')
  })
  .catch(error => {
    console.error(error);
    alert("failed")
  });

  }
  return (
    <div className="grid min-h-screen w-full grid-cols-1 md:grid-cols-2">
      <div className="flex flex-col items-center justify-center bg-primary p-6 md:p-12">
        <div className="max-w-md space-y-4">
          <div className="flex items-center space-x-2">
            <span className="text-2xl font-bold text-primary-foreground">26 Characters </span>
          </div>
          <p className="text-lg text-primary-foreground">
            Join the thousands of businesses that trust us to power their digital experiences.
          </p>
        </div>
      </div>
      <div className="flex items-center justify-center p-6 md:p-12">
        <div className="w-full max-w-md space-y-4">
          <h2 className="text-2xl font-bold">Create an account</h2>
          <form className="space-y-4">
            <div className="space-y-1">
              <Label htmlFor="email">Email</Label>
              <Input id="email" type="email" placeholder="m@example.com" required onChange={
                (e) => setFormData({ ...formData, email: e.target.value })
              } />
            </div>
            <div className="space-y-1">
              <Label htmlFor="password">Password</Label>
              <Input id="password" type="password" placeholder="Enter your password" required onChange={
                (e) => setFormData({ ...formData, password: e.target.value })
              } />
            </div>
            <div className="space-y-1">
              <Label htmlFor="confirm-password">Confirm Password</Label>
              <Input id="confirm-password" type="password" placeholder="Retype your password" required onChange={
                (e) => setFormData({ ...formData, confirmPassword: e.target.value })
              } />
            </div>
            <Button onClick={handleSubmit} type="submit" className="w-full">
              Sign Up
            </Button>
          </form>
          <div className="text-center text-sm text-muted-foreground">
            Already have an account?{" "}
            <Link href="/login" className="font-medium underline" prefetch={false}>
              Sign in
            </Link>
          </div>
        </div>
      </div>
    </div>
  )
}

